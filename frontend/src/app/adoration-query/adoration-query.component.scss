@use '../palette';

.adoration-query {
  max-width: 900px;
  margin: 0 auto;
  padding: 20px;
  background: white;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  border-radius: 8px;

  h2 {
    color: palette.$primary-color;
    text-align: center;
    margin-bottom: 20px;
  }

  .form-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
    background: palette.$background-color;
    border-radius: 8px;
    padding: 15px;

    .row-1,
    .row-2 {
      display: flex;
      gap: 15px;
    }

    .section {
      position: relative;
      border: 1px solid palette.$secondary-color;
      border-radius: 8px;
      padding: 10px;
      display: flex;
      align-items: center;
      gap: 10px;
      min-width: 250px;

      &::before {
        content: attr(data-title);
        position: absolute;
        top: -10px;
        left: 10px;
        background: palette.$background-color;
        padding: 0 5px;
        color: palette.$primary-color;
        font-weight: bold;
        font-size: 0.9em;
      }
    }

    .search-container {
      display: flex;
      align-items: center;
    }

    .search-button {
      background: none;
      border: none;
      cursor: pointer;
      font-size: 24px;
      line-height: 1;
      margin: 0;
      padding: 0;
      color: #555;

      &:hover {
        color: #000;
      }
    }
  }

  .results-area {
    margin-top: 20px;
    border: 1px solid palette.$secondary-color;
    border-radius: 8px;
    padding: 10px;

    /* 
      1) Enable horizontal scrolling if the grid columns exceed container width.
    */
    overflow-x: auto;

    .grid-table {
      display: grid;
      gap: 0;

      /* 
        2) Each row is auto-height to match the tallest cell.
        3) align-items: stretch => each cell in that row stretches to fill row height.
        4) grid-auto-flow: column => columns are created left-to-right.
        5) grid-auto-columns: auto => each column grows to fit its widest cell.
      */
      grid-auto-rows: 1fr;
      align-items: stretch;
      grid-auto-flow: column;
      grid-auto-columns: auto;

      /* 
        6) This ensures the grid won't shrink below the content width,
           so the overflow-x: auto; can actually scroll if columns are wide.
      */
      min-width: max-content;
    }

    .grid-column {
      border: none;
      margin-right: 0;
      display: flex;
      flex-direction: column;

      &.cdk-drag-over {
        outline: 2px dashed #666;
        background-color: rgba(0, 0, 0, 0.05);
      }

      .grid-column-header {
        border: 1px solid palette.$secondary-color;
        background-color: palette.$secondary-color;
        color: white;
        padding: 10px;
        font-weight: bold;
        text-align: left;
        position: relative;
        display: flex;
        align-items: center;
        gap: 8px;
        white-space: nowrap; /* Keep header text in one line */
      }

      .grid-column-cell {
        min-height: 20px;
        border: 1px solid palette.$secondary-color;
        padding: 10px;
        text-align: left;

        flex: 0 0 auto;
        white-space: nowrap; /* Keep cell text in one line, expanding horizontally */
      }
    }
  }
}

/* DRAG HANDLE, PREVIEW, & PLACEHOLDER STYLES */
.drag-handle {
  cursor: move;
}

.custom-drag-preview {
  background: white;
  border: 2px solid palette.$secondary-color;
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
  padding: 10px;
  border-radius: 4px;
  font-weight: bold;
  color: #333;
}

.custom-drag-placeholder {
  background-color: rgba(0, 0, 0, 0.05);
  border: 2px dashed #999;
  padding: 10px;
  font-style: italic;
  color: #555;
}
