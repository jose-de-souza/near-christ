@use "sass:color";
@use '../palette';

.diocese-maintenance {
    /* Main container is white */
    width: 90%;
    margin: 0 auto;
    padding: 20px;
    background: white;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    border-radius: 8px;

    h2 {
        color: palette.$primary-color;
        text-align: center;
        margin-bottom: 20px;
    }

    /* The top-level form-container => has a light-blue background (or whichever) */
    .form-container {
        display: flex;
        flex-direction: column;
        gap: 15px;
        margin-top: 20px;
        padding: 15px;
        background: palette.$background-color;
        /* e.g. a light-blue shade */
        border-radius: 8px;

        /* 
          Each .section => bounding box with a label in the top-left corner.
          The background is the same as .form-container => so it looks 
          like a “light-blue box” with a visible border & label. 
        */
        .section {
            position: relative;
            border: 1px solid palette.$secondary-color;
            border-radius: 8px;
            padding: 10px;
            display: flex;
            flex-direction: column;
            gap: 10px;
            background: palette.$background-color;

            &::before {
                content: attr(data-title);
                position: absolute;
                top: -10px;
                left: 10px;
                background: palette.$background-color;
                padding: 0 5px;
                color: palette.$primary-color;
                font-weight: bold;
                font-size: 0.9em;
            }

            .row-1,
            .row-2 {
                display: flex;
                flex-wrap: nowrap;
                gap: 5px;
                align-items: flex-end;
            }

            /*
                Row 1 => 4 fields => total ~98%
            */
            .row-1 .dioceseName {
                flex: 0 0 30%;
                max-width: 30%;
            }

            .row-1 .streetNo {
                flex: 0 0 10%;
                max-width: 10%;
            }

            .row-1 .streetName {
                flex: 0 0 29%;
                max-width: 29%;
            }

            .row-1 .suburb {
                flex: 0 0 29%;
                max-width: 29%;
            }

            /*
                Row 2 => 5 fields => total ~98%
            */
            .row-2 .postcode {
                flex: 0 0 10%;
                max-width: 10%;
            }

            .row-2 .phone {
                flex: 0 0 22%;
                max-width: 22%;
            }

            .row-2 .email {
                flex: 0 0 28%;
                max-width: 28%;
            }

            .row-2 .website {
                flex: 0 0 28%;
                max-width: 28%;
            }

            .field-group {
                display: flex;
                flex-direction: column;
                align-items: flex-start;
                box-sizing: border-box;
                gap: 3px;
            }

            label {
                color: palette.$primary-color;
                font-weight: bold;
                margin-bottom: 0;
            }

            select,
            input {
                width: 100%;
                max-width: none;
                padding: 6px;
                border: 1px solid palette.$secondary-color;
                border-radius: 4px;
                box-sizing: border-box;
            }

            .inline-error {
                color: red;
                font-size: 0.85em;
                margin-top: 2px;
            }
        }
    }

    .buttons {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;

        button {
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            color: white;
        }

        /* For each button, apply background color, plus a hover effect */
        button:nth-child(1) {
            background-color: palette.$save-button-bg;

            &:hover {
                background-color: color.adjust(palette.$neutral-color, $lightness: -10%, $space: hsl);
            }
        }

        button:nth-child(2) {
            background-color: palette.$default-button-bg;

            &:hover {
                background-color: palette.$default-button-hover-bg;
            }
        }

        button:nth-child(3) {
            background-color: palette.$delete-button-bg;

            &:hover {
                background-color: palette.$delete-button-hover-bg;
            }
        }

        button:nth-child(4) {
            background-color: palette.$neutral-color;

            &:hover {
                background-color: color.adjust(palette.$neutral-color, $lightness: -10%, $space: hsl);
            }
        }

        /* 
            Explicitly style disabled buttons so they look different 
            and show 'not-allowed' cursor. 
        */
        button:disabled {
            background-color: color.scale(palette.$neutral-color, $lightness: 80%);
            cursor: not-allowed;
            opacity: 0.6;

            /* Prevent hover color changes */
            &:hover {
                background-color: color.scale(palette.$neutral-color, $lightness: 80%);
            }
        }
    }

    /* The Filter => same .section styling => same border, label, light-blue background, etc. */
    .section.filter {
        margin-top: 20px;
        position: relative;
        border: 1px solid palette.$secondary-color;
        border-radius: 8px;
        padding: 10px;
        background: palette.$background-color;
        /* same as the other sections */
        display: flex;
        flex-direction: column;
        gap: 10px;

        &::before {
            content: attr(data-title);
            position: absolute;
            top: -10px;
            left: 10px;
            background: palette.$background-color;
            padding: 0 5px;
            color: palette.$primary-color;
            font-weight: bold;
            font-size: 0.9em;
        }

        .row-filter {
            display: flex;
            flex-wrap: nowrap;
            gap: 5px;
            align-items: flex-end;
        }

        .field-group {
            display: flex;
            flex-direction: column;
            gap: 3px;

            label {
                color: palette.$primary-color;
                font-weight: bold;
                margin-bottom: 0;
            }

            select {
                width: 100%;
                padding: 6px;
                border: 1px solid palette.$secondary-color;
                border-radius: 4px;
                box-sizing: border-box;
            }
        }

        /* The state filter => 12% width */
        .field-group.state {
            flex: 0 0 12%;
            max-width: 12%;
        }
    }

    .results-area {
        margin-top: 20px;
        border: 1px solid palette.$secondary-color;
        border-radius: 8px;
        padding: 10px;
        overflow-x: auto; // horizontal scroll if columns are wide

        .grid-table {
            display: grid;
            gap: 0;
            grid-auto-rows: 1fr;
            align-items: stretch;
            grid-auto-flow: column;
            grid-auto-columns: auto;
            min-width: max-content;
        }

        .grid-column {
            display: flex;
            flex-direction: column;

            &.cdk-drag-over {
                outline: 2px dashed #665;
                background-color: rgba(0, 0, 0, 0.05);
            }

            .grid-column-header {
                border: 1px solid palette.$secondary-color;
                background-color: palette.$secondary-color;
                color: white;
                padding: 10px;
                font-weight: bold;
                text-align: left;
                display: flex;
                align-items: center;
                gap: 8px;
                white-space: nowrap;
            }

            .grid-column-cell {
                min-height: 20px;
                border: 1px solid palette.$secondary-color;
                padding: 10px;
                text-align: left;
                flex: 0 0 auto;
                white-space: nowrap;
                cursor: pointer;

                &.no-states {
                    background-color: #f0f0f0; /* Grey background */
                    color: #888; /* Grey text */
                }
            }
        }
    }
}

/* DRAG HANDLE, PREVIEW, & PLACEHOLDER STYLES */
.drag-handle {
    cursor: move;
}

.custom-drag-preview {
    background: white;
    border: 2px solid palette.$secondary-color;
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
    padding: 10px;
    border-radius: 4px;
    font-weight: bold;
    color: #333;
}

.custom-drag-placeholder {
    background-color: rgba(0, 0, 0, 0.05);
    border: 2px dashed #999;
    padding: 10px;
    font-style: italic;
    color: #555;
}