@use '../palette';

body {
  background-color: palette.$background-color;
  font-family: Arial, sans-serif;
}

.rosary-crusade {
  max-width: 900px;
  margin: 0 auto;
  padding: 20px;
  background: white;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  border-radius: 8px;

  h2 {
    color: palette.$primary-color;
    text-align: center;
    margin-bottom: 20px;
  }

  .form-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-top: 20px;
    padding: 15px;
    background: palette.$background-color;
    border-radius: 8px;

    /* 3 rows: row-1 for Confession/Mass/Crusade, row-2 for Contact, row-3 for Observations */
    .row-1,
    .row-2,
    .row-3 {
      display: flex;
      gap: 15px;
    }

    .section {
      position: relative;
      border: 1px solid palette.$secondary-color;
      border-radius: 8px;
      padding: 25px 15px 15px;
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      justify-content: flex-start;
      width: 100%;
      box-sizing: border-box;

      &::before {
        content: attr(data-title);
        position: absolute;
        top: -10px;
        left: 10px;
        background: palette.$background-color;
        padding: 0 8px;
        font-size: 0.9em;
        font-weight: normal;
        color: palette.$primary-color;
      }

      /* Each field container */
      div {
        display: flex;
        /* label above input => let label, input stack? */
        flex-direction: column;
        align-items: flex-start;
        /* Remove flex:1 so they're not forced to stretch */
      }

      input,
      select,
      textarea {
        width: 100%;
        max-width: 180px;
        padding: 6px;
        border: 1px solid palette.$secondary-color;
        border-radius: 4px;
        box-sizing: border-box;
      }

      &.contact {
        .contact-row {
          display: flex;
          flex-direction: row;
          /* Force horizontal fields */
          gap: 15px;
          /* Let each sub-field take minimal space */
        }
      }

      &.observations {
        .observations-row {
          width: 100%;

          textarea {
            max-width: none;
            height: 80px;
            /* Adjust as desired */
          }
        }
      }
    }
  }

  .buttons {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;

    button {
      padding: 10px 15px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      color: white;
    }


    button:nth-child(1) {
      // Add button
      background-color: palette.$save-button-bg;

    }

    ;

    button:nth-child(1):hover {
      // Add button
      background-color: darken(palette.$neutral-color, 10%);
    }

    button:nth-child(2) {
      // Modify button
      background-color: palette.$default-button-bg;
    }

    button:nth-child(2):hover {
      // Modify button
      background-color: palette.$default-button-hover-bg;
    }

    button:nth-child(3) {
      // Delete button
      background-color: palette.$delete-button-bg;
    }

    button:nth-child(3):hover {
      // Delete button
      background-color: palette.$delete-button-hover-bg;
    }

    button:nth-child(4) {
      // Cancel button
      background-color: palette.$neutral-color;
    }

    button:nth-child(4):hover {
      // Cancel button
      background-color: darken(palette.$neutral-color, 10%);
    }
  }

  /* Scrollable table */
  .table-wrapper {
    max-width: 100%;
    overflow-x: auto;
    margin-top: 20px;

    table {
      width: 100%;
      border-collapse: collapse;

      th,
      td {
        border: 1px solid palette.$secondary-color;
        padding: 10px;
        text-align: left;
      }

      th {
        background-color: palette.$secondary-color;
        color: white;
      }

      tr:hover {
        background-color: darken(palette.$background-color, 5%);
        cursor: pointer;
      }
    }
  }
}