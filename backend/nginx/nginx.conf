# --- Performance Optimizations ---
# Enable Gzip compression to reduce the size of text-based files
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

# Server block for the Frontend Application (nearchrist.com)
server {
    listen 80;
    server_name nearchrist.com www.nearchrist.com;
    return 301 https://$host$request_uri;
}

server {
    # Enable HTTP/2 for better performance
    listen 443 ssl http2;
    server_name nearchrist.com www.nearchrist.com;

    # SSL Config for your frontend domain
    ssl_certificate /etc/letsencrypt/live/nearchrist.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nearchrist.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /usr/share/nginx/html;
    index index.html;

    # NEW: Add long-lived browser caching for static assets (images, css, js)
    # This tells browsers to cache these files for one year.
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public";
    }

    # This is crucial for single-page applications like Angular to handle routing
    location / {
        try_files $uri $uri/ /index.html;
    }
}

# Server block for the Backend API (api.nearchrist.com)
server {
    listen 80;
    server_name api.nearchrist.com;
    return 301 https://$host$request_uri;
}

server {
    # Enable HTTP/2 for better performance
    listen 443 ssl http2;
    server_name api.nearchrist.com;

    # SSL Config for your API domain
    ssl_certificate /etc/letsencrypt/live/api.nearchrist.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.nearchrist.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # Forward requests to the 'app' service on the internal Docker network
        proxy_pass http://app:8080;

        # NEW: Add proxy optimizations for keepalive connections
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
